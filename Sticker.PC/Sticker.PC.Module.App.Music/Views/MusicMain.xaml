<UserControl x:Class="Sticker.PC.Module.App.Music.Views.MusicMain"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sticker.PC.Module.App.Music.Views"
             xmlns:dummy="clr-namespace:Sticker.PC.Module.App.Music.Dummy"
             
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>

        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="#C7C7C7"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="#FF4545" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="0" Width="0" Fill="#C7C7C7"></Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="CustomSlider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="4" />
                    <Setter Property="MinWidth" Value="1" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#78EAFF" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RowStyleWithAlternation" TargetType="DataGridRow">
            <Setter Property="Padding" Value="0,21,0,17"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="GhostWhite"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#64AAFF"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#0064CD" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Width="1920" Height="1080">

        <Image Source="/Sticker.PC.Infra;component/Resources/Images/Music/background.png" Tag="NN" Stretch="Fill" />
        <StackPanel>
            <Grid Height="816">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="42,36,20,0" >
                    <StackPanel Orientation="Vertical" Background="#FCD5D5" Opacity="0.5" >
                        <Grid Height="201" >
                            <TextBlock Text="{Binding ArtistText}" FontFamily="NanumBarunGothic Regular" FontSize="60" Margin="61,50,0,0" Width="700" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <TextBlock Text="{Binding SubAlbumText}" FontFamily="NanumBarunGothic Regular" Foreground="#474646" FontSize="26" Margin="61,111,0,0" Width="500" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Image x:Name="img_randPlay" IsEnabled="{Binding ShuffleEnable}" Width="51" Height="47" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="800,51,0,0">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, ElementName=img_randPlay}" Value="True">
                                                <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/shuffle_select.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled, ElementName=img_randPlay}" Value="False">
                                                <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/shuffle.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <Image x:Name="img_repeatPlay" IsEnabled="{Binding RepeatEnable}" Width="51" Height="47" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="898,51,0,0">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEnabled, ElementName=img_repeatPlay}" Value="True">
                                                <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/repeat_1_select.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled, ElementName=img_repeatPlay}" Value="False">
                                                <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/repeat.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Grid>
                        <!--<DataGrid BorderThickness="0" Background="Transparent" HeadersVisibility="None" AutoGenerateColumns="False" Margin="62,-50,62,0" FontSize="30" FontFamily="NanumBarunGothic Regular" 
                                  ItemsSource="{Binding MusicList}" SelectedItem="{Binding ChooseItem}" GridLinesVisibility="None"
                                  IsHitTestVisible="True" CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource RowStyleWithAlternation}" RowHeight="68" Height="552" VerticalContentAlignment="Stretch" >


                            <DataGrid.Columns >
                                <DataGridTextColumn Binding="{Binding FileName}" Width="6*"  IsReadOnly="True" MaxWidth="10004" />
                                <DataGridTextColumn Binding="{Binding TimeString}" Width="1*" IsReadOnly="True"/>
                                
                            </DataGrid.Columns>
                            
                        </DataGrid>-->

                        <DataGrid x:Name="datagrid" BorderThickness="0,1,0,0"  Background="Transparent" HeadersVisibility="None" AutoGenerateColumns="False" Margin="62,-50,62,0" FontSize="30" FontFamily="NanumBarunGothic Regular" 
                                  GridLinesVisibility="None" RowBackground="Transparent" VerticalScrollBarVisibility="Visible" 
                                  ItemsSource="{Binding MusicList}" SelectedItem="{Binding ChooseItem}" IsHitTestVisible="True" CellStyle="{DynamicResource DataGridCellStyle}" RowStyle="{DynamicResource RowStyleWithAlternation}" RowHeight="68" Height="552" VerticalContentAlignment="Stretch" BorderBrush="Black" IsSynchronizedWithCurrentItem="True" RowDetailsVisibilityMode="Visible" SelectionMode="Single" SelectedIndex="{Binding SelectMusicIndex}" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger>
                                    <prism:InvokeCommandAction Command="{Binding OpenCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="1*" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="6*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding ListTitle}" VerticalAlignment="Center" Grid.Column="0"/>
                                                <TextBlock Text="{Binding TimeString}" VerticalAlignment="Center" Grid.Column="1"/>
                                              </Grid>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                            <!--<dummy:DummyItem Artist="hi" FileName="hi" TimeString="hi"/>
                            <dummy:DummyItem Artist ="hi" FileName="hi" TimeString="hi"/>
                            <dummy:DummyItem Artist="hi" FileName="hi" TimeString="hi"/>-->

                        </DataGrid>

                    </StackPanel>

                </Grid>
                <Grid Grid.Column="1" Margin="20,36,42,0" >
                    <!--<Image Source="/Sticker.PC.Infra;component/Resources/Images/Music/default.png"  Stretch="Fill" Opacity="0.5" Margin="122,117"-->
                    <Image Source="{Binding ImageAlbumArt}"  Stretch="Fill" Opacity="0.8" />
                    <StackPanel Background="#000000" Opacity="0.2">
                        <Image x:Name="img_PlayAndPause" IsEnabled="{Binding PlayEnable}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                   Margin="331,335,333,335">
                           
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=img_PlayAndPause}" Value="False">
                                            <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/play.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=img_PlayAndPause}" Value="True">
                                            <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Music/pause.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                           
                        </Image>
                    </StackPanel>

                </Grid>

            </Grid>
            <Grid Height="264">
                <Grid Margin="0,40,0,216">
                    <Slider IsMoveToPointEnabled="True" IsSelectionRangeEnabled="True" SelectionStart="{Binding StartTime}" SelectionEnd="{Binding EndTime}" 
                            VerticalAlignment="Center" Value="{Binding CurrentTime}" Height="4"
                            Maximum="{Binding TotalTime}" Style="{DynamicResource CustomSlider}" />
                </Grid>

                <Grid Margin=" 44,69,44,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="121*"/>
                        <ColumnDefinition Width="1594*"/>
                        <ColumnDefinition Width="121*"/>
                    </Grid.ColumnDefinitions>
                    <!--<Canvas x:Name="Canv" Grid.Column="1" ClipToBounds="True" HorizontalAlignment="Center" VerticalAlignment="Center" >
                      
                    </Canvas>-->

                    <TextBlock Grid.Column="0" Text="{Binding CurrentTimeString}"  FontSize="40" FontFamily="NanumBarunGothic Regular" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" TextAlignment="Center"/>
                    <TextBlock Grid.Column="1" Text="{Binding AlbumText}" Foreground="White" FontSize="26" FontFamily="NanumBarunGothic Regular"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Canvas x:Name="Canv" ClipToBounds="True" Grid.Column="1" Width="800" HorizontalAlignment="Center">
                        <TextBlock x:Name="FlowText" Text="{Binding MusicName, NotifyOnTargetUpdated=True}" FontFamily="NanumBarunGothic Regular" FontSize="42" Foreground="White" 
                                   TextAlignment="Center" />
                    </Canvas>
                    <TextBlock Grid.Column="2" Text="{Binding TotalTimeString}"  FontSize="40" FontFamily="NanumBarunGothic Regular" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" TextAlignment="Center"/>

                    <Button Command="{Binding PlayCommand}" Width="44" Height="44" Grid.Column="1" Margin="388,118,0,0" 
                            Background="Transparent" BorderThickness="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Image Source="/Sticker.PC.Infra;component/Resources/Images/Music/mute.png" Visibility="Visible" />
                    </Button>

                    <Button Width="44" Height="44" Grid.Column="1" Margin="1151,118,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                             Background="Transparent" BorderThickness="0">
                        <Image Source="/Sticker.PC.Infra;component/Resources/Images/Music/speaker.png" Visibility="Visible" />
                    </Button>
                </Grid>
                <Slider TickPlacement="Both" IsMoveToPointEnabled="True" IsSelectionRangeEnabled="True" SelectionStart="0" SelectionEnd="{Binding CurrentSound}" 
                        Value="{Binding CurrentSound}" Maximum="100" Orientation="Horizontal" VerticalAlignment="Bottom" Width="703" Style="{DynamicResource CustomSlider}" Margin="0,0,0,48">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <prism:InvokeCommandAction Command="{Binding VolumValueChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
