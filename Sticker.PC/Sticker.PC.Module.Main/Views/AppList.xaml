<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sticker.PC.Module.Main.Views"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
    
             x:Class="Sticker.PC.Module.Main.Views.AppList"
             x:Name="userControl" 
             mc:Ignorable="d" >
    
    <UserControl.Resources>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="12,12"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type telerik:CarouselItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type telerik:CarouselItem}">
                        <Grid ClipToBounds="False" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <Border x:Name="reflection" BorderBrush="White" BorderThickness="0" ClipToBounds="False" IsHitTestVisible="False" Opacity="{Binding ReflectionSettings.Opacity, RelativeSource={RelativeSource TemplatedParent}}" RenderTransformOrigin="0.5,1" Visibility="{Binding ReflectionSettings.Visibility, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding ActualWidth, ElementName=dialog_Copy}">
                                <Border.Background>
                                    <VisualBrush Visual="{Binding ElementName=dialog_Copy}"/>
                                </Border.Background>
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="Transparent" Offset="{Binding ReflectionSettings.HiddenPercentage, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0">
                                            <ScaleTransform.ScaleY>
                                                <Binding ConverterParameter="-1" Path="ReflectionSettings.HeightOffset" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <telerik:ArithmeticValueConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </ScaleTransform.ScaleY>
                                            <ScaleTransform.ScaleX>
                                                <Binding ConverterParameter="1" Path="ReflectionSettings.WidthOffset" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <telerik:ArithmeticValueConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                        <TranslateTransform X="{Binding ReflectionSettings.OffsetX, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <SkewTransform AngleX="{Binding ReflectionSettings.Angle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                            <Grid>
                                <Image x:Name="GlowEffectBox" Visibility="Collapsed" Source="/Sticker.PC.Infra;component/Resources/Images/Main/effect_glow.png" Stretch="Fill" Width="398" Height="435"></Image>
                                <Grid x:Name="dialog_Copy" Background="Transparent">
                                    <Grid x:Name="CarouselItemBackground" Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                                        <ContentPresenter x:Name="CarouselContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">                                
                                <Setter Property="Visibility" TargetName="GlowEffectBox" Value="Visible"/>
                                <Setter Property="RenderTransform" TargetName="reflection">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="-37">
                                                <ScaleTransform.ScaleY>
                                                    <Binding ConverterParameter="-1" Path="ReflectionSettings.HeightOffset" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <telerik:ArithmeticValueConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ScaleTransform.ScaleY>
                                                <ScaleTransform.ScaleX>
                                                    <Binding ConverterParameter="1" Path="ReflectionSettings.WidthOffset" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <telerik:ArithmeticValueConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </ScaleTransform.ScaleX>
                                            </ScaleTransform>
                                            <TranslateTransform X="{Binding ReflectionSettings.OffsetX, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <SkewTransform AngleX="{Binding ReflectionSettings.Angle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Visibility" TargetName="GlowEffectBox" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Path x:Key="HorizontalPath"
			Stretch="Fill"
			StrokeThickness="1"
            Data="M 450,200 C 450,200 0,200 0,200"
            Stroke="#FFB4B4B4"/>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding ViewLoadedCommand}" CommandParameter="{Binding ElementName=userControl, Mode=OneWay}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Image Source="/Sticker.PC.Infra;component/Resources/Images/Global/background_main.png" Stretch="Fill" Tag="NN"/>

        <Grid Width="1920">
            <Image Source="/Sticker.PC.Infra;component/Resources/Images/Main/img_logo.png" Width="120" Height="84" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="140,100,0,0"/>

            <ListBox Background="Transparent" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,108,140,0">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <Image Width="80" Height="80" Stretch="Uniform" VerticalAlignment="Center" >
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                            <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_profile_on.png"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False">
                                            <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_profile_off.png"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        
                        <Image Source="{Binding MasterThumbnailUri}" Width="34" Stretch="Uniform" HorizontalAlignment="Center" Grid.Row="5" Margin="0,8,0,0"/>
                    </Grid>
                    <TextBlock Text="{Binding MasterName}"
                           FontSize="32"
                           Foreground="White"
                           FontFamily="/Sticker.PC.Infra;component/Resources/Fonts/OpenSans-Regular.ttf#OpenSans-Regular" Margin="10,0" VerticalAlignment="Center"/>
                </StackPanel>

                <Image Width="64" Height="64" Stretch="Uniform" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                    <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_setting_on.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False">
                                    <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_setting_off.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image Width="61" Height="64" Stretch="Uniform" VerticalAlignment="Center">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True">
                                    <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_power_on.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="False">
                                    <Setter Property="Source" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_power_off.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ListBox>
            
            <Grid VerticalAlignment="Center" Margin="52,0">
                <Button HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding ControlCommand}" CommandParameter="Left">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="LeftButtonImage" Source="/Sticker.PC.Infra;component/Resources/Images/Main/btn_arrow_left_off.png" Width="37" Height="54" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="LeftButtonImage" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_arrow_left_on.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <telerik:RadCarousel
                    AutoGenerateDataPresenters="False"
                    HorizontalScrollBarVisibility="Hidden"
                    ItemsSource="{Binding AppInfoList}"
                    telerik:StyleManager.Theme="Windows8"
				    Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0">

                    <telerik:RadCarousel.ItemsPanel>
                        <ItemsPanelTemplate>
                            <telerik:RadCarouselPanel Path="{StaticResource HorizontalPath}"/>
                        </ItemsPanelTemplate>
                    </telerik:RadCarousel.ItemsPanel>

                    <telerik:RadCarousel.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" Background="#2c4157">
                                <Image Source="{Binding Path=Thumbnail}" Height="289" Width="324" Stretch="Fill"/>
                                <Grid Height="72" Width="324">
                                    <TextBlock VerticalAlignment="Center" Margin="22,0,0,0" Width="280"
                                        FontFamily="/Sticker.PC.Infra;component/Resources/Fonts/NanumBarunGothic.ttf#NanumBarunGothic"
                                        Text="{Binding Title}" Foreground="White" FontSize="34"/>
                                </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </telerik:RadCarousel.ItemTemplate>

                </telerik:RadCarousel>
                <Button HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding ControlCommand}" CommandParameter="Right">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="RightButtonImage" Source="/Sticker.PC.Infra;component/Resources/Images/Main/btn_arrow_right_off.png" Width="37" Height="54" Stretch="Uniform" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed" Value="True">
                                    <Setter Property="Source" TargetName="RightButtonImage" Value="/Sticker.PC.Infra;component/Resources/Images/Main/btn_arrow_right_on.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
